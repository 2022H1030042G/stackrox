syntax = "proto3";

option go_package = "v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "api/v1/cluster_service.proto";

package v1;

message CheckDefinition {
    string name        = 1;
    string description = 2;
}

message GetChecksResponse {
    repeated CheckDefinition checks = 1;
}

message Benchmark {
    string name                             = 1;
    bool editable                           = 2;
    repeated string checks                  = 3;
    repeated ClusterType cluster_types      = 4;
}

message GetBenchmarkRequest {
    string name = 1;
}

message GetBenchmarksRequest {
    string name = 1;
}

message GetBenchmarksResponse {
    repeated Benchmark benchmarks = 1;
}

message DeleteBenchmarkRequest {
    string name = 1;
}

service BenchmarkService {

    rpc GetChecks(google.protobuf.Empty) returns (GetChecksResponse) {
        option (google.api.http) = {
            get: "/v1/benchmarks/checks"
        };
    }

    rpc GetBenchmark(GetBenchmarkRequest) returns (Benchmark) {
        option (google.api.http) = {
            get: "/v1/benchmarks/configs/{name}"
        };
    }

    rpc GetBenchmarks(GetBenchmarksRequest) returns (GetBenchmarksResponse) {
        option (google.api.http) = {
            get: "/v1/benchmarks/configs"
        };
    }

    rpc PostBenchmark(Benchmark) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/benchmarks/configs"
            body: "*"
        };
    }

    rpc PutBenchmark(Benchmark) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/benchmarks/configs/{name}"
            body: "*"
        };
    }

    rpc DeleteBenchmark(DeleteBenchmarkRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/benchmarks/configs/{name}"
        };
    }

}
