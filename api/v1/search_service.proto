syntax = "proto3";

option go_package = "v1";

import "google/api/annotations.proto";
import "api/v1/common.proto";

package v1;

enum SearchCategory {
    SEARCH_UNSET = 0;
    ALERTS       = 1;
    IMAGES       = 2;
    POLICIES     = 3;
    DEPLOYMENTS  = 4;
    // TODO support Benchmarks
}

message RawQuery {
    string query = 1; // A query is a formatted string like Cluster:dev+Namespace:stackrox+Image Name:nginx
}

message RawSearchRequest {
    string query                       = 1;
    repeated SearchCategory categories = 2;
}

message ParsedSearchRequest {
    repeated SearchCategory   categories   = 1;
    repeated Scope            scopes       = 2;
    message Values {
        repeated string values  = 1;
    }
    map<string, Values>       fields       = 3;
    string                    string_query = 4;
}

message SearchResult {
    string id                             = 1;
    string name                           = 2;
    SearchCategory category               = 3;
    message Matches {
        repeated string values = 1;
    }
    map<string, Matches> field_to_matches = 4;
    double score                          = 5;
    string location                       = 6;
}

message SearchResponse {
    repeated SearchResult results = 1;
}

message SearchOptionsRequest {
    repeated SearchCategory categories = 1;
}

message SearchOptionsResponse {
    repeated string options = 1;
}

service SearchService {

    rpc Search(RawSearchRequest) returns (SearchResponse) {
        option (google.api.http) = {
            get: "/v1/search"
        };
    }


    rpc Options(SearchOptionsRequest) returns (SearchOptionsResponse) {
        option (google.api.http) = {
            get: "/v1/search/metadata/options"
        };
    }

}
