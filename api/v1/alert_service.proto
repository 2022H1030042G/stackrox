syntax = "proto3";

option go_package = "v1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "api/v1/common.proto";
import "api/v1/policy_service.proto";
import "api/v1/deployment_service.proto";

package v1;

message Alert {
    string id                               = 1;
    Policy policy                           = 2;
    Deployment deployment                   = 3;
    message Violation {
        string message    = 1;
    }
    repeated Violation violations           = 4;
    message Enforcement {
        EnforcementAction action = 1;
        string message           = 2;
    }
    Enforcement enforcement                 = 5;
    google.protobuf.Timestamp time          = 6;
    bool stale                              = 7;
    google.protobuf.Timestamp marked_stale  = 8;
}

message GetAlertRequest {
    string id          = 1;
}

message GetAlertsRequest {
    repeated Policy_Category category      = 1;
    repeated string policy_name            = 2;
    repeated Severity severity             = 3;
    google.protobuf.Timestamp since        = 4;
    google.protobuf.Timestamp until        = 5;
    google.protobuf.Timestamp sinceStale   = 6;
    google.protobuf.Timestamp untilStale   = 7;
    repeated bool stale                    = 8;
    repeated string cluster                = 9;
    repeated string deployment_id          = 10;
}

message GetAlertsResponse {
    repeated Alert alerts = 1;
}

message GetAlertsGroupResponse {
    message PolicyGroup {
        Policy policy = 1;
        int64 num_alerts = 2;
    }

    repeated PolicyGroup alerts_by_policies = 1;
}

message GetAlertsCountsRequest {
    GetAlertsRequest request    = 1;
    enum RequestGroup {
        UNSET       = 0;
        CATEGORY    = 1;
        CLUSTER     = 2;
    }
    RequestGroup group_by       = 2;
}

message GetAlertsCountsResponse {
    message AlertGroup {
        string group                    = 1;
        message AlertCounts {
            Severity severity   = 1;
            int64 count         = 2;
        }
        repeated AlertCounts counts     = 2;
    }
    repeated AlertGroup groups = 1;
}

enum Type {
    CREATED = 0;
    REMOVED = 1;
}

message Event {
    int64 time        = 1;
    Type type         = 2;
    string id         = 3;
    Severity severity = 4;
}

message GetAlertTimeseriesResponse {
    repeated Event events = 1;
}

service AlertService {

    rpc GetAlert (GetAlertRequest) returns (Alert) {
        option (google.api.http) = {
            get: "/v1/alert/{id}"
        };
    }

    rpc GetAlerts (GetAlertsRequest) returns (GetAlertsResponse) {
        option (google.api.http) = {
            get: "/v1/alerts"
        };
    }

    rpc GetAlertsGroup (GetAlertsRequest) returns (GetAlertsGroupResponse) {
        option (google.api.http) = {
            get: "/v1/alerts/groups"
        };
    }

    rpc GetAlertsCounts (GetAlertsCountsRequest) returns (GetAlertsCountsResponse) {
        option (google.api.http) = {
            get: "/v1/alerts/counts"
        };
    }

    rpc GetAlertTimeseries(GetAlertsRequest) returns (GetAlertTimeseriesResponse) {
        option (google.api.http) = {
            get: "/v1/alerts/timeseries"
        };
    }
    // No post/put API for alerts

    // No deletion of alerts

}
