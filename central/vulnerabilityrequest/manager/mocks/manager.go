// Code generated by MockGen. DO NOT EDIT.
// Source: manager.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// SnoozeVulnerabilityOnRequest mocks base method.
func (m *MockManager) SnoozeVulnerabilityOnRequest(ctx context.Context, requestID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SnoozeVulnerabilityOnRequest", ctx, requestID)
	ret0, _ := ret[0].(error)
	return ret0
}

// SnoozeVulnerabilityOnRequest indicates an expected call of SnoozeVulnerabilityOnRequest.
func (mr *MockManagerMockRecorder) SnoozeVulnerabilityOnRequest(ctx, requestID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SnoozeVulnerabilityOnRequest", reflect.TypeOf((*MockManager)(nil).SnoozeVulnerabilityOnRequest), ctx, requestID)
}

// UnSnoozeVulnerabilityOnRequest mocks base method.
func (m *MockManager) UnSnoozeVulnerabilityOnRequest(ctx context.Context, requestID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnSnoozeVulnerabilityOnRequest", ctx, requestID)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnSnoozeVulnerabilityOnRequest indicates an expected call of UnSnoozeVulnerabilityOnRequest.
func (mr *MockManagerMockRecorder) UnSnoozeVulnerabilityOnRequest(ctx, requestID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnSnoozeVulnerabilityOnRequest", reflect.TypeOf((*MockManager)(nil).UnSnoozeVulnerabilityOnRequest), ctx, requestID)
}
