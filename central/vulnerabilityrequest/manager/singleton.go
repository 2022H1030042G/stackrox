package manager

import (
	"github.com/stackrox/rox/central/vulnerabilityrequest/datastore"
	"github.com/stackrox/rox/pkg/features"
	"github.com/stackrox/rox/pkg/sync"
)

var (
	once     sync.Once
	instance Manager
)

func initialize() {
	instance = New(datastore.Singleton())
}

// Singleton provides the instance of Manager to use.
func Singleton() Manager {
	if !features.VulnRiskManagement.Enabled() {
		return nil
	}
	once.Do(initialize)
	return instance
}

// New returns an initialized manager, and starts the manager's processing loop in the background.
func New(datastore datastore.DataStore) Manager {
	return &manager{
		datastore: datastore,
	}
}
