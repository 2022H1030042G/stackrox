syntax = "proto3";

option go_package = "v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "v1/common.proto";

package v1;

message DockerfileLineRuleField {
    string instruction  = 1;
    string value        = 2;
}

enum Comparator {
    LESS_THAN              = 0;
    LESS_THAN_OR_EQUALS    = 1;
    EQUALS                 = 2;
    GREATER_THAN_OR_EQUALS = 3;
    GREATER_THAN           = 4;
}

enum MathOP {
    MIN = 0;
    MAX = 1;
    AVG = 2;
}

message NumericalPolicy {
    Comparator op  = 1;
    MathOP math_op = 2;
    float value    = 3;
}

// Image Name
message ImageNamePolicy {
    string registry        = 1; // e.g. docker.io
    string namespace       = 2; // e.g. stackrox
    string repo            = 3; // e.g. container-summarizer
    string tag             = 4; // e.g. latest
}

message ImagePolicy {
    // Policy Metadata
    string name                         = 1;
    Severity severity                   = 2;
    string description                  = 3;
    bool disabled                       = 4;

    ImageNamePolicy image_name          = 5;

    // Registry metadata
    int64 image_age_days                = 6;
    DockerfileLineRuleField line_rule   = 7;

    // Scan Metadata
    NumericalPolicy cvss                = 8;
    string cve                          = 9;
    string component                    = 10;
    int64 scan_age_days                 = 11;
}

message GetImagePoliciesRequest {
    string name = 1;
}

message DeleteImagePolicyRequest {
    string name = 1;
}

message ImagePoliciesResponse {
    repeated ImagePolicy policies = 1;
}

service ImagePolicyService {

    rpc GetImagePolicies (GetImagePoliciesRequest) returns (ImagePoliciesResponse) {
        option (google.api.http) = {
            get: "/v1/images/policies"
        };
    }

    rpc PostImagePolicy (ImagePolicy) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/images/policies"
            body: "*"
        };
    }

    rpc PutImagePolicy (ImagePolicy) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/images/policies/{name}"
            body: "*"
        };
    }

    rpc DeleteImagePolicy (DeleteImagePolicyRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/images/policies/{name}"
        };
    }

}