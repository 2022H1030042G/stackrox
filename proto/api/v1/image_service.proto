syntax = "proto3";

option go_package = "v1";

import "google/api/annotations.proto";

package v1;

enum ImageScanState {
    FAILED    = 0;
    UNSCANNED = 1;
    SCANNING  = 2;
    PENDING   = 3;
    SCANNED   = 4;
    CHECKING  = 5;
    COMPLETED = 6;
}

message ImageLayer {
    string instruction = 1;
    string value       = 2;
    int64 created      = 3;
    string author      = 4;
}

message ImageMetadata {
    int64  created             = 1;
    string author              = 2;
    repeated ImageLayer layers = 3;
}

message License {
    string name = 1;
    string type = 2;
    string url  = 3;
}

message Vulnerability {
    string cve     = 1;
    float cvss     = 2;
    string summary = 3;
}

message ScanLayer {
    string sha                              = 1;
    repeated ImageScanComponents components = 2;
}

message ImageScanComponents {
    string name                  = 1;
    string version               = 2;
    License license              = 3;
    repeated string full_path    = 4; // Unsure if needed
    repeated Vulnerability vulns = 5;
}

message ImageScan {
    string sha                              = 1;
    string registry                         = 2;
    string remote                           = 3;
    string tag                              = 4;
    // This indicates which version of the CVE DB this was scanned against. Used to determine if rescan needed
    string cve_db_identifier                = 5;
    ImageScanState state                    = 6;
    repeated ScanLayer layers               = 7;
    int64 scan_time                         = 8;
}

message Image {
    string sha             = 1;
    string registry        = 2;
    string remote          = 3;
    string tag             = 4;

    ImageMetadata metadata = 5;
    ImageScan scan         = 6;
}

service ImageService {

//    rpc GetImageRules(google.protobuf.Empty) returns (ImageRules) {
//        option (google.api.http) = {
//            get: "/v1/imageses"
//        };
//    }
//
//    rpc PostImageRule(ImageRule) returns (ImageRule) {
//        option (google.api.http) = {
//            post: "/v1/images/rules"
//            body: "*"
//        };
//    }
//
//    rpc PutImageRule(ImageRule) returns (ImageRule) {
//        option (google.api.http) = {
//            put: "/v1/images/rules/{name}"
//            body: "*"
//        };
//    }

}
