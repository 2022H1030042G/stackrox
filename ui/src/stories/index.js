import React from 'react';
import { Provider } from 'react-redux';
import createHistory from 'history/createBrowserHistory';
import { submit } from 'redux-form';

import { storiesOf } from '@storybook/react';
import { action } from '@storybook/addon-actions';

/* eslint-disable */
import 'index.css'; // this file is generated by tailwind (see package.json scripts)
/* eslint-enable */

import configureStore from 'store/configureStore';
import SimpleForm from 'Components/SimpleForm';
import PanelSlider from 'Components/PanelSlider';
import ClustersDownloadPage from 'Containers/Integrations/ClustersDownloadPage';

const history = createHistory();
const store = configureStore(undefined, history);

const onSubmit = values => {
    action()(values);
};

const onFormSave = () => store.dispatch(submit('simpleform'));

storiesOf('SimpleForm', module)
    .addDecorator(getStory => <Provider store={store}>{getStory()}</Provider>)
    .add('with cluster creation form details', () => {
        const fields = [
            {
                label: 'Name',
                value: 'name',
                placeholder: 'Cluster name'
            },
            {
                label: 'Image name (Prevent location)',
                value: 'preventImage',
                placeholder: 'stackrox.io/prevent:[current-version]'
            },
            {
                label: 'Central API Endpoint',
                value: 'centralApiEndpoint',
                placeholder: 'localhost:8080'
            },
            {
                label: 'Namespace',
                value: 'namespace'
            },
            {
                label: 'Image Pull Secret Name',
                value: 'imagePullSecret'
            }
        ];
        const initialValues = {
            name: 'SWARM_CLUSTER_TEST',
            type: 'SWARM_CLUSTER',
            preventImage: 'stackrox/prevent:latest',
            centralApiEndpoint: 'central.prevent_net:443',
            namespace: '',
            imagePullSecret: ''
        };
        return (
            <div>
                <SimpleForm fields={fields} onSubmit={onSubmit} initialValues={initialValues} />
                <button
                    className="flex py-2 px-2 rounded-sm font-400 uppercase text-center text-sm items-center ml-2 text-success-500 hover:text-white bg-white hover:bg-success-400 border border-success-400"
                    onClick={onFormSave}
                >
                    Save
                </button>
            </div>
        );
    });

storiesOf('PanelSlider', module)
    .addDecorator(getStory => <Provider store={store}>{getStory()}</Provider>)
    .add('with 3 child elements (panels)', () => (
        <PanelSlider header="This is a header" onFinish={action('Finished')}>
            <div className="p-4">Panel 1</div>
            <div className="p-4">Panel 2</div>
            <div className="p-4">Panel 3</div>
        </PanelSlider>
    ))
    .add('with 1 child element (panel)', () => (
        <PanelSlider header="This is a header" onFinish={action('Finished')}>
            <div className="p-4">Panel 1</div>
        </PanelSlider>
    ))
    .add('with cancel button', () => (
        <PanelSlider
            header="This is a header"
            onFinish={action('Finished')}
            onClose={action('Closed')}
        >
            <div className="p-4">Panel 1</div>
        </PanelSlider>
    ));

storiesOf('ClustersDownloadPage', module)
    .addDecorator(getStory => <Provider store={store}>{getStory()}</Provider>)
    .add('with props', () => {
        const cluster = {
            name: 'SWARM_CLUSTER_TEST',
            type: 'SWARM_CLUSTER',
            preventImage: 'stackrox/prevent:latest',
            centralApiEndpoint: 'central.prevent_net:443',
            namespace: '',
            imagePullSecret: ''
        };
        return (
            <div className="w-1/2">
                <ClustersDownloadPage cluster={cluster} onClick={action('Download')} />
            </div>
        );
    });
